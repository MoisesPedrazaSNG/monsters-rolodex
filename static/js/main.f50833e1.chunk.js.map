{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","className","src","id","alt","name","email","CardList","monsters","map","Searchbox","handleChange","placeholder","type","onChange","App","state","searchField","console","log","fetch","then","response","json","users","setState","this","filteredMonster","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAIaA,G,MAAO,SAACC,GAAW,IACtBC,EAAYD,EAAZC,QACR,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAG,kBAAaJ,EAAQG,MAC9F,6BAAKH,EAAQK,OACb,4BAAIL,EAAQM,aCNLC,G,MAAW,SAACR,GAAW,IAC1BS,EAAaT,EAAbS,SACR,OACE,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAMC,UAAU,UAA2BD,QAASA,GAArBA,EAAQG,WCLlCO,G,MAAY,SAAAX,GAAU,IACzBY,EAA8BZ,EAA9BY,aAAcC,EAAgBb,EAAhBa,YACtB,OACE,qBAAKX,UAAU,qBAAf,SACE,uBACEY,KAAK,SACLZ,UAAU,SACVW,YAAaA,EACbE,SAAUH,QC2BHI,G,wDAjCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJH,E,gEAQO,IAAD,OAClBC,QAAQC,IAAI,6BACZC,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLN,QAAQC,IAAIK,GACZ,EAAKC,SAAS,CAAEjB,SAAUgB,S,+BAItB,IAAD,SAC2BE,KAAKV,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZU,EAAkBnB,EAASoB,QAAO,SAAA5B,GAAO,OAAIA,EAAQK,KAAKwB,cAAcC,SAASb,EAAYY,kBACnG,OACE,sBAAK5B,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,8BACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBD,aAAc,SAAAoB,GAAC,OAAI,EAAKN,SAAS,CAACR,YAAac,EAAEC,OAAOC,WACjG,cAAC,EAAD,CAAUzB,SAAUmB,W,GA5BVO,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f50833e1.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = (props) => {\n  const { monster } = props;\n  return (\n    <div className=\"card-container\">\n      <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt={`Monster ${monster.id}`}/>\n      <h1>{monster.name}</h1>\n      <p>{monster.email}</p>\n    </div>\n  )\n}","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {\n  const { monsters } = props;\n  return (\n    <div className=\"card-list\">\n      {monsters.map((monster) => (\n        <Card className=\"monster\" key={monster.id} monster={monster} />\n      ))}  \n    </div>\n  );\n};","import React from 'react';\n\nimport './searchbox.styles.css';\n\nexport const Searchbox = props => {\n  const { handleChange, placeholder } = props;\n  return (\n    <div className=\"Searchbox__wrapper\">\n      <input\n        type=\"search\"\n        className=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange}\n        />\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { Searchbox } from './components/searchbox/searchbox.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    console.log('The component is mounted!');\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => {\n        return response.json();\n      })\n      .then((users) => {\n        console.log(users);\n        this.setState({ monsters: users });\n      });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonster = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1 className=\"app-title\">Monsters Rolodex</h1>\n        <Searchbox placeholder=\"Search Monsters\" handleChange={e => this.setState({searchField: e.target.value})} />\n        <CardList monsters={filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}